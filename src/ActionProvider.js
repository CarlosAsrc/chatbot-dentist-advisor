import song from "./media/pling-sound.mp3";

class ActionProvider {

    state = {
        audio: new Audio(song)
    };
    
    constructor(createChatBotMessage, setStateFunc) {
        this.createChatBotMessage = createChatBotMessage;
        this.setState = setStateFunc;
    }

    greet() {
        this.sendBotMessage("OlÃ¡! ðŸ˜ƒ", {})
        this.handleBackToOptions()
    }

    cannotUnderstandMessage() {
        this.sendBotMessage("NÃ£o entendi ðŸ˜•", {})
        this.handleBackToOptions()
    }

    yourNameQuestion() {
        this.sendBotMessage("O meu nome Ã© Estrela! ðŸ¥°", {})
        this.handleBackToOptions()
    }

    passwordMatch() {
        this.sendBotMessage("Perfeito! Estes sÃ£o os links de acesso para o material complementar:",
            { widget: 'complementaryMaterialLinks' })
    }


    handleObjectives = () => {
        this.sendBotMessage("Os Principais objetivos do preparo radicular sÃ£o:", {})
        this.sendBotMessage("- Manter saÃºde periapical", {})
        this.sendBotMessage("- CondiÃ§Ãµes de reparaÃ§Ã£o da regiÃ£o periapical e canal radicular", {})

        this.handleBackToOptions()
    };


    handleStepByStep = () => {
        this.sendBotMessage("O preparo Ã© feito na direÃ§Ã£o cÃ©rvico-apical, atravÃ©s dos seguintes passos: ", {})

        this.sendBotMessage("ExploraÃ§Ã£o do canal radicular", {})
        this.sendBotMessage("Preparo do â…“ cervical", {})
        this.sendBotMessage("Odontometria", {})
        this.sendBotMessage("Preparo do â…“ apical", {})

        this.handleBackToOptions()

    };

    handleQuizRequest = () => {
        this.sendBotMessage("Ã“timo! No seguinte link vocÃª deverÃ¡ realizar o quiz para obter a senha de acesso aos materiais complementares sobre o preparo do canal radicular:",
            { widget: "quizOptions" }
        )
    };


    handleBackToOptions = () => {
        this.sendBotMessage(
            "Escolha uma das opÃ§Ãµes para que eu possa lhe ajudar:",
            { widget: "learningOptions", delay: 2000 }
        )
    };

    handleHasPassword = () => {
        this.sendBotMessage(
            "Informe a senha para obter os links de acesso:",
            { widget: "quizOptionsWithoutPassword" }
        )
    };




    sendBotMessage = (text, widget) => {
        this.updateChatbotState(this.createChatBotMessage(text, widget));
        setTimeout(() => this.state.audio.play(), 1000)
    }

    updateChatbotState(message) {
        this.setState((prevState) => ({
            ...prevState,
            messages: [...prevState.messages, message],
        }));
    }
}

export default ActionProvider;
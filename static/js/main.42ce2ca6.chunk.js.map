{"version":3,"sources":["ActionProvider.js","MessageParser.js","components/LearningOptions/LearningOptions.js","components/QuizOptions/QuizOptions.js","components/LinkList/LinkList.js","config.js","App.js","index.js"],"names":["ActionProvider","createChatBotMessage","setStateFunc","handleObjectives","sendBotMessage","handleBackToOptions","handleStepByStep","handleQuizRequest","widget","text","updateChatbotState","this","setState","greetingMessage","message","prevState","messages","MessageParser","actionProvider","toLowerCase","includes","greet","LearningOptions","props","optionsMarkup","handler","id","map","option","className","onClick","QuizOptions","handleHasPassword","LinkList","console","log","linkMarkup","options","link","href","url","target","rel","config","botName","initialMessages","customStyles","botMessageBox","backgroundColor","chatButton","widgets","widgetName","widgetFunc","App","messageParser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42ce2ca6.chunk.js","sourcesContent":["\nclass ActionProvider {\n    constructor(createChatBotMessage, setStateFunc) {\n        this.createChatBotMessage = createChatBotMessage;\n        this.setState = setStateFunc;\n    }\n\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Hi, friend.\");\n        this.updateChatbotState(greetingMessage);\n    }\n\n    handleObjectives = () => {\n        this.sendBotMessage(\"Os Principais objetivos do preparo radicular são:\", {})\n        this.sendBotMessage(\"- Manter saúde periapical\", {})\n        this.sendBotMessage(\"- Condições de reparação da região periapical e canal radicular\", {})\n\n        this.handleBackToOptions()\n    };\n\n\n    handleStepByStep = () => {\n        this.sendBotMessage(\"O preparo é feito na direção cérvico-apical, através dos seguintes passos: \", {})\n\n        this.sendBotMessage(\"Exploração do canal radicular\", {})\n        this.sendBotMessage(\"Preparo do ⅓ cervical\", {})\n        this.sendBotMessage(\"Odontometria\", {})\n        this.sendBotMessage(\"Preparo do ⅓ apical\", {})\n\n        this.handleBackToOptions()\n\n    };\n\n    handleQuizRequest = () => {\n        this.sendBotMessage(\"Ótimo! No seguinte link você deverá realizar o quiz para obter a senha de acesso aos materiais complementares sobre o preparo do canal radicular!\",\n            { widget: \"quizOptions\" }\n        )\n    };\n\n\n    handleBackToOptions = () => {\n        this.sendBotMessage(\n            \"Escolha uma das opções para que eu possa lhe ajudar:\",\n            { widget: \"learningOptions\" }\n        )\n    };\n\n\n    sendBotMessage = (text, widget) => {\n        this.updateChatbotState(this.createChatBotMessage(text, widget));\n    }\n\n    updateChatbotState(message) {\n        this.setState((prevState) => ({\n            ...prevState,\n            messages: [...prevState.messages, message],\n        }));\n    }\n}\n\nexport default ActionProvider;","class MessageParser {\n    constructor(actionProvider) {\n      this.actionProvider = actionProvider;\n    }\n  \n    parse(message) {\n      const lowerCaseMessage = message.toLowerCase()\n      \n      if (lowerCaseMessage.includes(\"hello\")) {\n        this.actionProvider.greet()\n      }\n    }\n  }\n  \n  export default MessageParser","// in src/components/LearningOptions/LearningOptions.jsx\n\nimport React from \"react\";\n\nimport \"./LearningOptions.css\";\n\nconst LearningOptions = (props) => {\n    const options = [\n        { text: \"Objetivos do preparo do canal radicular\", handler: props.actionProvider.handleObjectives, id: 1 },\n        { text: \"Passo a passo do preparo radicular\", handler: props.actionProvider.handleStepByStep, id: 2 },\n        { text: \"Quero fazer o quiz\", handler: props.actionProvider.handleQuizRequest, id: 3 }\n    ];\n\n    const optionsMarkup = options.map((option) => (\n        <button\n            className=\"learning-option-button\"\n            key={option.id}\n            onClick={option.handler}\n        >\n            {option.text}\n        </button>\n    ));\n\n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n};\n\nexport default LearningOptions;","// in src/components/LearningOptions/LearningOptions.jsx\n\nimport React from \"react\";\n\nimport \"./QuizOptions.css\";\n\nconst QuizOptions = (props) => {\n    const options = [\n        { text: \"Ja fiz o quiz e estou com a senha\", handler: props.actionProvider.handleHasPassword, id: 1 },\n        { text: \"Quero ver os materiais disponíveis\", handler: props.actionProvider.handleBackToOptions, id: 2 }\n    ];\n\n    const optionsMarkup = options.map((option) => (\n        <button\n            className=\"quiz-option-button\"\n            key={option.id}\n            onClick={option.handler}\n        >\n            {option.text}\n        </button>\n    ));\n\n    return <div className=\"quiz-options-container\">{optionsMarkup}</div>;\n};\n\nexport default QuizOptions;","import React from \"react\";\n\nimport \"./LinkList.css\";\n\nconst LinkList = (props) => {\n    console.log(props);\n    const linkMarkup = props.options.map((link) => (\n        <li key={link.id} className=\"link-list-item\">\n            <a\n                href={link.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"link-list-item-url\"\n            >\n                {link.text}\n            </a>\n        </li>\n    ));\n\n    return <ul className=\"link-list\">{linkMarkup}</ul>;\n};\n\nexport default LinkList;","// Config starter code\nimport { createChatBotMessage } from \"react-chatbot-kit\";\n\nimport LearningOptions from \"./components/LearningOptions/LearningOptions\";\nimport QuizOptions from \"./components/QuizOptions/QuizOptions\";\nimport LinkList from \"./components/LinkList/LinkList.js\";\n\nconst config = {\n    botName: \"Cirurgião Dentista Bot\",\n    initialMessages: [createChatBotMessage(`Olá! Sou um bot especializado em preparo do canal radicular. O que você deseja saber?`, {\n        widget: \"learningOptions\",\n    }),\n    ],\n    customStyles: {\n        botMessageBox: {\n            backgroundColor: \"#376B7E\",\n        },\n        chatButton: {\n            backgroundColor: \"#376B7E\",\n        },\n    },\n\n    widgets: [\n        {\n            widgetName: \"learningOptions\",\n            widgetFunc: (props) => <LearningOptions {...props} />,\n        },\n        {\n            widgetName: \"quizOptions\",\n            widgetFunc: (props) => <QuizOptions {...props} />,\n        },\n        {\n            widgetName: \"javascriptLinks\",\n            widgetFunc: (props) => <LinkList {...props} />,\n            props: {\n                options: [\n                    {\n                        text: \"Introduction to JS\",\n                        url:\n                            \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/\",\n                        id: 1,\n                    },\n                    {\n                        text: \"Mozilla JS Guide\",\n                        url:\n                            \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide\",\n                        id: 2,\n                    },\n                    {\n                        text: \"Frontend Masters\",\n                        url: \"https://frontendmasters.com\",\n                        id: 3,\n                    },\n                ],\n            },\n        },\n    ],\n}\n\nexport default config","import React from 'react';\nimport Chatbot from 'react-chatbot-kit'\nimport './App.css';\n\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\nimport config from './config';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chatbot config={config} actionProvider={ActionProvider} messageParser={MessageParser} />\n      </header>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}